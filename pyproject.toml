[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "graph-api"
version = "1.0.0"
description = "Django Graph API with Celery for path finding"
authors = [{name = "Muhammad Elkfrawy", email = "m.elkfrawy@gmail.com"}]
readme = "README.md"
requires-python = ">=3.12"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["graph_api", "nodes"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "graph_api.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["nodes/tests"]
addopts = [
    "--reuse-db",
    "--tb=short",
    "-v",
    "--cov=.",
    "--cov-report=term-missing",
    "-n 8",  # run tests in parallel
]

[tool.coverage.run]
omit = [
  "*/migrations/*",
  "*/tests/*",
  "manage.py",
  "graph_api/*",
  "exceptions.py",
  "admin.py",
]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
